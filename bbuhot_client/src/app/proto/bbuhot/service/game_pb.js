/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bbuhot_service_auth_pb = require('../../bbuhot/service/auth_pb.js');
goog.exportSymbol('proto.bhuhot.service.AdminGameReply', null, global);
goog.exportSymbol('proto.bhuhot.service.AdminGameRequest', null, global);
goog.exportSymbol('proto.bhuhot.service.AdminGameStatusReply', null, global);
goog.exportSymbol('proto.bhuhot.service.AdminGameStatusReply.ErrorCode', null, global);
goog.exportSymbol('proto.bhuhot.service.AdminGameStatusRequest', null, global);
goog.exportSymbol('proto.bhuhot.service.BetReply', null, global);
goog.exportSymbol('proto.bhuhot.service.BetReply.BetErrorCode', null, global);
goog.exportSymbol('proto.bhuhot.service.BetRequest', null, global);
goog.exportSymbol('proto.bhuhot.service.Game', null, global);
goog.exportSymbol('proto.bhuhot.service.Game.Bet', null, global);
goog.exportSymbol('proto.bhuhot.service.Game.BettingOption', null, global);
goog.exportSymbol('proto.bhuhot.service.Game.Status', null, global);
goog.exportSymbol('proto.bhuhot.service.ListGameReply', null, global);
goog.exportSymbol('proto.bhuhot.service.ListGameRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.Game = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bhuhot.service.Game.repeatedFields_, null);
};
goog.inherits(proto.bhuhot.service.Game, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.Game.displayName = 'proto.bhuhot.service.Game';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bhuhot.service.Game.repeatedFields_ = [10,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.Game.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.Game.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.Game} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.Game.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    description: jspb.Message.getField(msg, 3),
    normalUserVisible: jspb.Message.getFieldWithDefault(msg, 4, false),
    status: jspb.Message.getField(msg, 5),
    betOptionLimit: jspb.Message.getField(msg, 6),
    betAmountLowest: jspb.Message.getField(msg, 7),
    betAmountHighest: jspb.Message.getField(msg, 8),
    endTimeMs: jspb.Message.getField(msg, 9),
    bettingOptionsList: jspb.Message.toObjectList(msg.getBettingOptionsList(),
    proto.bhuhot.service.Game.BettingOption.toObject, includeInstance),
    winningOption: jspb.Message.getField(msg, 11),
    betsList: jspb.Message.toObjectList(msg.getBetsList(),
    proto.bhuhot.service.Game.Bet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.Game}
 */
proto.bhuhot.service.Game.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.Game;
  return proto.bhuhot.service.Game.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.Game} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.Game}
 */
proto.bhuhot.service.Game.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNormalUserVisible(value);
      break;
    case 5:
      var value = /** @type {!proto.bhuhot.service.Game.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBetOptionLimit(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBetAmountLowest(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBetAmountHighest(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTimeMs(value);
      break;
    case 10:
      var value = new proto.bhuhot.service.Game.BettingOption;
      reader.readMessage(value,proto.bhuhot.service.Game.BettingOption.deserializeBinaryFromReader);
      msg.addBettingOptions(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWinningOption(value);
      break;
    case 12:
      var value = new proto.bhuhot.service.Game.Bet;
      reader.readMessage(value,proto.bhuhot.service.Game.Bet.deserializeBinaryFromReader);
      msg.addBets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.Game.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.Game.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.Game} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.Game.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {!proto.bhuhot.service.Game.Status} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getBettingOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.bhuhot.service.Game.BettingOption.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getBetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.bhuhot.service.Game.Bet.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bhuhot.service.Game.Status = {
  DRAFT: 0,
  PUBLISHED: 1,
  SETTLED: 2,
  CANCELLED: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.Game.BettingOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bhuhot.service.Game.BettingOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.Game.BettingOption.displayName = 'proto.bhuhot.service.Game.BettingOption';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.Game.BettingOption.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.Game.BettingOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.Game.BettingOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.Game.BettingOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getField(msg, 1),
    odds: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.Game.BettingOption}
 */
proto.bhuhot.service.Game.BettingOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.Game.BettingOption;
  return proto.bhuhot.service.Game.BettingOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.Game.BettingOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.Game.BettingOption}
 */
proto.bhuhot.service.Game.BettingOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOdds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.Game.BettingOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.Game.BettingOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.Game.BettingOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.Game.BettingOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * required string name = 1;
 * @return {string}
 */
proto.bhuhot.service.Game.BettingOption.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.bhuhot.service.Game.BettingOption.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.bhuhot.service.Game.BettingOption.prototype.clearName = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.BettingOption.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int32 odds = 2;
 * @return {number}
 */
proto.bhuhot.service.Game.BettingOption.prototype.getOdds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.bhuhot.service.Game.BettingOption.prototype.setOdds = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.bhuhot.service.Game.BettingOption.prototype.clearOdds = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.BettingOption.prototype.hasOdds = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.Game.Bet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bhuhot.service.Game.Bet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.Game.Bet.displayName = 'proto.bhuhot.service.Game.Bet';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.Game.Bet.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.Game.Bet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.Game.Bet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.Game.Bet.toObject = function(includeInstance, msg) {
  var f, obj = {
    bettingOptionId: jspb.Message.getField(msg, 1),
    money: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.Game.Bet}
 */
proto.bhuhot.service.Game.Bet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.Game.Bet;
  return proto.bhuhot.service.Game.Bet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.Game.Bet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.Game.Bet}
 */
proto.bhuhot.service.Game.Bet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBettingOptionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoney(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.Game.Bet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.Game.Bet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.Game.Bet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.Game.Bet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * required int32 betting_option_id = 1;
 * @return {number}
 */
proto.bhuhot.service.Game.Bet.prototype.getBettingOptionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.bhuhot.service.Game.Bet.prototype.setBettingOptionId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.bhuhot.service.Game.Bet.prototype.clearBettingOptionId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.Bet.prototype.hasBettingOptionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int32 money = 2;
 * @return {number}
 */
proto.bhuhot.service.Game.Bet.prototype.getMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.bhuhot.service.Game.Bet.prototype.setMoney = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.bhuhot.service.Game.Bet.prototype.clearMoney = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.Bet.prototype.hasMoney = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int32 id = 1;
 * @return {number}
 */
proto.bhuhot.service.Game.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.bhuhot.service.Game.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.bhuhot.service.Game.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string name = 2;
 * @return {string}
 */
proto.bhuhot.service.Game.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.bhuhot.service.Game.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.bhuhot.service.Game.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string description = 3;
 * @return {string}
 */
proto.bhuhot.service.Game.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.bhuhot.service.Game.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.bhuhot.service.Game.prototype.clearDescription = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool normal_user_visible = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.bhuhot.service.Game.prototype.getNormalUserVisible = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.bhuhot.service.Game.prototype.setNormalUserVisible = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.bhuhot.service.Game.prototype.clearNormalUserVisible = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasNormalUserVisible = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Status status = 5;
 * @return {!proto.bhuhot.service.Game.Status}
 */
proto.bhuhot.service.Game.prototype.getStatus = function() {
  return /** @type {!proto.bhuhot.service.Game.Status} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.bhuhot.service.Game.Status} value */
proto.bhuhot.service.Game.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.bhuhot.service.Game.prototype.clearStatus = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required int32 bet_option_limit = 6;
 * @return {number}
 */
proto.bhuhot.service.Game.prototype.getBetOptionLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.bhuhot.service.Game.prototype.setBetOptionLimit = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.bhuhot.service.Game.prototype.clearBetOptionLimit = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasBetOptionLimit = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required int32 bet_amount_lowest = 7;
 * @return {number}
 */
proto.bhuhot.service.Game.prototype.getBetAmountLowest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.bhuhot.service.Game.prototype.setBetAmountLowest = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.bhuhot.service.Game.prototype.clearBetAmountLowest = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasBetAmountLowest = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * required int32 bet_amount_highest = 8;
 * @return {number}
 */
proto.bhuhot.service.Game.prototype.getBetAmountHighest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.bhuhot.service.Game.prototype.setBetAmountHighest = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.bhuhot.service.Game.prototype.clearBetAmountHighest = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasBetAmountHighest = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * required int64 end_time_ms = 9;
 * @return {number}
 */
proto.bhuhot.service.Game.prototype.getEndTimeMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.bhuhot.service.Game.prototype.setEndTimeMs = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.bhuhot.service.Game.prototype.clearEndTimeMs = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasEndTimeMs = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated BettingOption betting_options = 10;
 * @return {!Array<!proto.bhuhot.service.Game.BettingOption>}
 */
proto.bhuhot.service.Game.prototype.getBettingOptionsList = function() {
  return /** @type{!Array<!proto.bhuhot.service.Game.BettingOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bhuhot.service.Game.BettingOption, 10));
};


/** @param {!Array<!proto.bhuhot.service.Game.BettingOption>} value */
proto.bhuhot.service.Game.prototype.setBettingOptionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.bhuhot.service.Game.BettingOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bhuhot.service.Game.BettingOption}
 */
proto.bhuhot.service.Game.prototype.addBettingOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.bhuhot.service.Game.BettingOption, opt_index);
};


proto.bhuhot.service.Game.prototype.clearBettingOptionsList = function() {
  this.setBettingOptionsList([]);
};


/**
 * optional int32 winning_option = 11;
 * @return {number}
 */
proto.bhuhot.service.Game.prototype.getWinningOption = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.bhuhot.service.Game.prototype.setWinningOption = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.bhuhot.service.Game.prototype.clearWinningOption = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.Game.prototype.hasWinningOption = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated Bet bets = 12;
 * @return {!Array<!proto.bhuhot.service.Game.Bet>}
 */
proto.bhuhot.service.Game.prototype.getBetsList = function() {
  return /** @type{!Array<!proto.bhuhot.service.Game.Bet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bhuhot.service.Game.Bet, 12));
};


/** @param {!Array<!proto.bhuhot.service.Game.Bet>} value */
proto.bhuhot.service.Game.prototype.setBetsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.bhuhot.service.Game.Bet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bhuhot.service.Game.Bet}
 */
proto.bhuhot.service.Game.prototype.addBets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.bhuhot.service.Game.Bet, opt_index);
};


proto.bhuhot.service.Game.prototype.clearBetsList = function() {
  this.setBetsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.AdminGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bhuhot.service.AdminGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.AdminGameRequest.displayName = 'proto.bhuhot.service.AdminGameRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.AdminGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.AdminGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.AdminGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.AdminGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && bbuhot_service_auth_pb.AuthRequest.toObject(includeInstance, f),
    game: (f = msg.getGame()) && proto.bhuhot.service.Game.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.AdminGameRequest}
 */
proto.bhuhot.service.AdminGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.AdminGameRequest;
  return proto.bhuhot.service.AdminGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.AdminGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.AdminGameRequest}
 */
proto.bhuhot.service.AdminGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bbuhot_service_auth_pb.AuthRequest;
      reader.readMessage(value,bbuhot_service_auth_pb.AuthRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = new proto.bhuhot.service.Game;
      reader.readMessage(value,proto.bhuhot.service.Game.deserializeBinaryFromReader);
      msg.setGame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.AdminGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.AdminGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.AdminGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.AdminGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bbuhot_service_auth_pb.AuthRequest.serializeBinaryToWriter
    );
  }
  f = message.getGame();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bhuhot.service.Game.serializeBinaryToWriter
    );
  }
};


/**
 * required AuthRequest auth = 1;
 * @return {!proto.bhuhot.service.AuthRequest}
 */
proto.bhuhot.service.AdminGameRequest.prototype.getAuth = function() {
  return /** @type{!proto.bhuhot.service.AuthRequest} */ (
    jspb.Message.getWrapperField(this, bbuhot_service_auth_pb.AuthRequest, 1, 1));
};


/** @param {!proto.bhuhot.service.AuthRequest} value */
proto.bhuhot.service.AdminGameRequest.prototype.setAuth = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.bhuhot.service.AdminGameRequest.prototype.clearAuth = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required Game game = 2;
 * @return {!proto.bhuhot.service.Game}
 */
proto.bhuhot.service.AdminGameRequest.prototype.getGame = function() {
  return /** @type{!proto.bhuhot.service.Game} */ (
    jspb.Message.getWrapperField(this, proto.bhuhot.service.Game, 2, 1));
};


/** @param {!proto.bhuhot.service.Game} value */
proto.bhuhot.service.AdminGameRequest.prototype.setGame = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.bhuhot.service.AdminGameRequest.prototype.clearGame = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameRequest.prototype.hasGame = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.AdminGameReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bhuhot.service.AdminGameReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.AdminGameReply.displayName = 'proto.bhuhot.service.AdminGameReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.AdminGameReply.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.AdminGameReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.AdminGameReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.AdminGameReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    authErrorCode: jspb.Message.getField(msg, 1),
    game: (f = msg.getGame()) && proto.bhuhot.service.Game.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.AdminGameReply}
 */
proto.bhuhot.service.AdminGameReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.AdminGameReply;
  return proto.bhuhot.service.AdminGameReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.AdminGameReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.AdminGameReply}
 */
proto.bhuhot.service.AdminGameReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (reader.readEnum());
      msg.setAuthErrorCode(value);
      break;
    case 2:
      var value = new proto.bhuhot.service.Game;
      reader.readMessage(value,proto.bhuhot.service.Game.deserializeBinaryFromReader);
      msg.setGame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.AdminGameReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.AdminGameReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.AdminGameReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.AdminGameReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGame();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bhuhot.service.Game.serializeBinaryToWriter
    );
  }
};


/**
 * required AuthReply.AuthErrorCode auth_error_code = 1;
 * @return {!proto.bhuhot.service.AuthReply.AuthErrorCode}
 */
proto.bhuhot.service.AdminGameReply.prototype.getAuthErrorCode = function() {
  return /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.bhuhot.service.AuthReply.AuthErrorCode} value */
proto.bhuhot.service.AdminGameReply.prototype.setAuthErrorCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.bhuhot.service.AdminGameReply.prototype.clearAuthErrorCode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameReply.prototype.hasAuthErrorCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Game game = 2;
 * @return {?proto.bhuhot.service.Game}
 */
proto.bhuhot.service.AdminGameReply.prototype.getGame = function() {
  return /** @type{?proto.bhuhot.service.Game} */ (
    jspb.Message.getWrapperField(this, proto.bhuhot.service.Game, 2));
};


/** @param {?proto.bhuhot.service.Game|undefined} value */
proto.bhuhot.service.AdminGameReply.prototype.setGame = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.bhuhot.service.AdminGameReply.prototype.clearGame = function() {
  this.setGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameReply.prototype.hasGame = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.AdminGameStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bhuhot.service.AdminGameStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.AdminGameStatusRequest.displayName = 'proto.bhuhot.service.AdminGameStatusRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.AdminGameStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.AdminGameStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.AdminGameStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && bbuhot_service_auth_pb.AuthRequest.toObject(includeInstance, f),
    gameId: jspb.Message.getField(msg, 2),
    gameStatus: jspb.Message.getField(msg, 3),
    winningOption: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.AdminGameStatusRequest}
 */
proto.bhuhot.service.AdminGameStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.AdminGameStatusRequest;
  return proto.bhuhot.service.AdminGameStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.AdminGameStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.AdminGameStatusRequest}
 */
proto.bhuhot.service.AdminGameStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bbuhot_service_auth_pb.AuthRequest;
      reader.readMessage(value,bbuhot_service_auth_pb.AuthRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameId(value);
      break;
    case 3:
      var value = /** @type {!proto.bhuhot.service.Game.Status} */ (reader.readEnum());
      msg.setGameStatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWinningOption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.AdminGameStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.AdminGameStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.AdminGameStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bbuhot_service_auth_pb.AuthRequest.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {!proto.bhuhot.service.Game.Status} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * required AuthRequest auth = 1;
 * @return {!proto.bhuhot.service.AuthRequest}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.getAuth = function() {
  return /** @type{!proto.bhuhot.service.AuthRequest} */ (
    jspb.Message.getWrapperField(this, bbuhot_service_auth_pb.AuthRequest, 1, 1));
};


/** @param {!proto.bhuhot.service.AuthRequest} value */
proto.bhuhot.service.AdminGameStatusRequest.prototype.setAuth = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.bhuhot.service.AdminGameStatusRequest.prototype.clearAuth = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int32 game_id = 2;
 * @return {number}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.bhuhot.service.AdminGameStatusRequest.prototype.setGameId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.bhuhot.service.AdminGameStatusRequest.prototype.clearGameId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.hasGameId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required Game.Status game_status = 3;
 * @return {!proto.bhuhot.service.Game.Status}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.getGameStatus = function() {
  return /** @type {!proto.bhuhot.service.Game.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.bhuhot.service.Game.Status} value */
proto.bhuhot.service.AdminGameStatusRequest.prototype.setGameStatus = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.bhuhot.service.AdminGameStatusRequest.prototype.clearGameStatus = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.hasGameStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 winning_option = 4;
 * @return {number}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.getWinningOption = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.bhuhot.service.AdminGameStatusRequest.prototype.setWinningOption = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.bhuhot.service.AdminGameStatusRequest.prototype.clearWinningOption = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameStatusRequest.prototype.hasWinningOption = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.AdminGameStatusReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bhuhot.service.AdminGameStatusReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.AdminGameStatusReply.displayName = 'proto.bhuhot.service.AdminGameStatusReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.AdminGameStatusReply.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.AdminGameStatusReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.AdminGameStatusReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.AdminGameStatusReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    authErrorCode: jspb.Message.getField(msg, 1),
    gameStatusErrorCode: jspb.Message.getField(msg, 2),
    game: (f = msg.getGame()) && proto.bhuhot.service.Game.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.AdminGameStatusReply}
 */
proto.bhuhot.service.AdminGameStatusReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.AdminGameStatusReply;
  return proto.bhuhot.service.AdminGameStatusReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.AdminGameStatusReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.AdminGameStatusReply}
 */
proto.bhuhot.service.AdminGameStatusReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (reader.readEnum());
      msg.setAuthErrorCode(value);
      break;
    case 2:
      var value = /** @type {!proto.bhuhot.service.AdminGameStatusReply.ErrorCode} */ (reader.readEnum());
      msg.setGameStatusErrorCode(value);
      break;
    case 3:
      var value = new proto.bhuhot.service.Game;
      reader.readMessage(value,proto.bhuhot.service.Game.deserializeBinaryFromReader);
      msg.setGame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.AdminGameStatusReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.AdminGameStatusReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.AdminGameStatusReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.AdminGameStatusReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.bhuhot.service.AdminGameStatusReply.ErrorCode} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getGame();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bhuhot.service.Game.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bhuhot.service.AdminGameStatusReply.ErrorCode = {
  NO_ERROR: 0,
  LOCKED: 1
};

/**
 * required AuthReply.AuthErrorCode auth_error_code = 1;
 * @return {!proto.bhuhot.service.AuthReply.AuthErrorCode}
 */
proto.bhuhot.service.AdminGameStatusReply.prototype.getAuthErrorCode = function() {
  return /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.bhuhot.service.AuthReply.AuthErrorCode} value */
proto.bhuhot.service.AdminGameStatusReply.prototype.setAuthErrorCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.bhuhot.service.AdminGameStatusReply.prototype.clearAuthErrorCode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameStatusReply.prototype.hasAuthErrorCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ErrorCode game_status_error_code = 2;
 * @return {!proto.bhuhot.service.AdminGameStatusReply.ErrorCode}
 */
proto.bhuhot.service.AdminGameStatusReply.prototype.getGameStatusErrorCode = function() {
  return /** @type {!proto.bhuhot.service.AdminGameStatusReply.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.bhuhot.service.AdminGameStatusReply.ErrorCode} value */
proto.bhuhot.service.AdminGameStatusReply.prototype.setGameStatusErrorCode = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.bhuhot.service.AdminGameStatusReply.prototype.clearGameStatusErrorCode = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameStatusReply.prototype.hasGameStatusErrorCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Game game = 3;
 * @return {?proto.bhuhot.service.Game}
 */
proto.bhuhot.service.AdminGameStatusReply.prototype.getGame = function() {
  return /** @type{?proto.bhuhot.service.Game} */ (
    jspb.Message.getWrapperField(this, proto.bhuhot.service.Game, 3));
};


/** @param {?proto.bhuhot.service.Game|undefined} value */
proto.bhuhot.service.AdminGameStatusReply.prototype.setGame = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.bhuhot.service.AdminGameStatusReply.prototype.clearGame = function() {
  this.setGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.AdminGameStatusReply.prototype.hasGame = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.ListGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bhuhot.service.ListGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.ListGameRequest.displayName = 'proto.bhuhot.service.ListGameRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.ListGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.ListGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.ListGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.ListGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && bbuhot_service_auth_pb.AuthRequest.toObject(includeInstance, f),
    isAdminRequest: jspb.Message.getFieldWithDefault(msg, 2, false),
    gameStatus: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.ListGameRequest}
 */
proto.bhuhot.service.ListGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.ListGameRequest;
  return proto.bhuhot.service.ListGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.ListGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.ListGameRequest}
 */
proto.bhuhot.service.ListGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bbuhot_service_auth_pb.AuthRequest;
      reader.readMessage(value,bbuhot_service_auth_pb.AuthRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdminRequest(value);
      break;
    case 3:
      var value = /** @type {!proto.bhuhot.service.Game.Status} */ (reader.readEnum());
      msg.setGameStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.ListGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.ListGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.ListGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.ListGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bbuhot_service_auth_pb.AuthRequest.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {!proto.bhuhot.service.Game.Status} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * required AuthRequest auth = 1;
 * @return {!proto.bhuhot.service.AuthRequest}
 */
proto.bhuhot.service.ListGameRequest.prototype.getAuth = function() {
  return /** @type{!proto.bhuhot.service.AuthRequest} */ (
    jspb.Message.getWrapperField(this, bbuhot_service_auth_pb.AuthRequest, 1, 1));
};


/** @param {!proto.bhuhot.service.AuthRequest} value */
proto.bhuhot.service.ListGameRequest.prototype.setAuth = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.bhuhot.service.ListGameRequest.prototype.clearAuth = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.ListGameRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool is_admin_request = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.bhuhot.service.ListGameRequest.prototype.getIsAdminRequest = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.bhuhot.service.ListGameRequest.prototype.setIsAdminRequest = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.bhuhot.service.ListGameRequest.prototype.clearIsAdminRequest = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.ListGameRequest.prototype.hasIsAdminRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required Game.Status game_status = 3;
 * @return {!proto.bhuhot.service.Game.Status}
 */
proto.bhuhot.service.ListGameRequest.prototype.getGameStatus = function() {
  return /** @type {!proto.bhuhot.service.Game.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.bhuhot.service.Game.Status} value */
proto.bhuhot.service.ListGameRequest.prototype.setGameStatus = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.bhuhot.service.ListGameRequest.prototype.clearGameStatus = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.ListGameRequest.prototype.hasGameStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.ListGameReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bhuhot.service.ListGameReply.repeatedFields_, null);
};
goog.inherits(proto.bhuhot.service.ListGameReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.ListGameReply.displayName = 'proto.bhuhot.service.ListGameReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bhuhot.service.ListGameReply.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.ListGameReply.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.ListGameReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.ListGameReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.ListGameReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    authErrorCode: jspb.Message.getField(msg, 1),
    gamesList: jspb.Message.toObjectList(msg.getGamesList(),
    proto.bhuhot.service.Game.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.ListGameReply}
 */
proto.bhuhot.service.ListGameReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.ListGameReply;
  return proto.bhuhot.service.ListGameReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.ListGameReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.ListGameReply}
 */
proto.bhuhot.service.ListGameReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (reader.readEnum());
      msg.setAuthErrorCode(value);
      break;
    case 2:
      var value = new proto.bhuhot.service.Game;
      reader.readMessage(value,proto.bhuhot.service.Game.deserializeBinaryFromReader);
      msg.addGames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.ListGameReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.ListGameReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.ListGameReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.ListGameReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bhuhot.service.Game.serializeBinaryToWriter
    );
  }
};


/**
 * required AuthReply.AuthErrorCode auth_error_code = 1;
 * @return {!proto.bhuhot.service.AuthReply.AuthErrorCode}
 */
proto.bhuhot.service.ListGameReply.prototype.getAuthErrorCode = function() {
  return /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.bhuhot.service.AuthReply.AuthErrorCode} value */
proto.bhuhot.service.ListGameReply.prototype.setAuthErrorCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.bhuhot.service.ListGameReply.prototype.clearAuthErrorCode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.ListGameReply.prototype.hasAuthErrorCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Game games = 2;
 * @return {!Array<!proto.bhuhot.service.Game>}
 */
proto.bhuhot.service.ListGameReply.prototype.getGamesList = function() {
  return /** @type{!Array<!proto.bhuhot.service.Game>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bhuhot.service.Game, 2));
};


/** @param {!Array<!proto.bhuhot.service.Game>} value */
proto.bhuhot.service.ListGameReply.prototype.setGamesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bhuhot.service.Game=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bhuhot.service.Game}
 */
proto.bhuhot.service.ListGameReply.prototype.addGames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bhuhot.service.Game, opt_index);
};


proto.bhuhot.service.ListGameReply.prototype.clearGamesList = function() {
  this.setGamesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.BetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bhuhot.service.BetRequest.repeatedFields_, null);
};
goog.inherits(proto.bhuhot.service.BetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.BetRequest.displayName = 'proto.bhuhot.service.BetRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bhuhot.service.BetRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.BetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.BetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.BetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.BetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && bbuhot_service_auth_pb.AuthRequest.toObject(includeInstance, f),
    gameId: jspb.Message.getField(msg, 2),
    betsList: jspb.Message.toObjectList(msg.getBetsList(),
    proto.bhuhot.service.Game.Bet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.BetRequest}
 */
proto.bhuhot.service.BetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.BetRequest;
  return proto.bhuhot.service.BetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.BetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.BetRequest}
 */
proto.bhuhot.service.BetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bbuhot_service_auth_pb.AuthRequest;
      reader.readMessage(value,bbuhot_service_auth_pb.AuthRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameId(value);
      break;
    case 3:
      var value = new proto.bhuhot.service.Game.Bet;
      reader.readMessage(value,proto.bhuhot.service.Game.Bet.deserializeBinaryFromReader);
      msg.addBets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.BetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.BetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.BetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.BetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bbuhot_service_auth_pb.AuthRequest.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.bhuhot.service.Game.Bet.serializeBinaryToWriter
    );
  }
};


/**
 * required AuthRequest auth = 1;
 * @return {!proto.bhuhot.service.AuthRequest}
 */
proto.bhuhot.service.BetRequest.prototype.getAuth = function() {
  return /** @type{!proto.bhuhot.service.AuthRequest} */ (
    jspb.Message.getWrapperField(this, bbuhot_service_auth_pb.AuthRequest, 1, 1));
};


/** @param {!proto.bhuhot.service.AuthRequest} value */
proto.bhuhot.service.BetRequest.prototype.setAuth = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.bhuhot.service.BetRequest.prototype.clearAuth = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.BetRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int32 game_id = 2;
 * @return {number}
 */
proto.bhuhot.service.BetRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.bhuhot.service.BetRequest.prototype.setGameId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.bhuhot.service.BetRequest.prototype.clearGameId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.BetRequest.prototype.hasGameId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Game.Bet bets = 3;
 * @return {!Array<!proto.bhuhot.service.Game.Bet>}
 */
proto.bhuhot.service.BetRequest.prototype.getBetsList = function() {
  return /** @type{!Array<!proto.bhuhot.service.Game.Bet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bhuhot.service.Game.Bet, 3));
};


/** @param {!Array<!proto.bhuhot.service.Game.Bet>} value */
proto.bhuhot.service.BetRequest.prototype.setBetsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bhuhot.service.Game.Bet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bhuhot.service.Game.Bet}
 */
proto.bhuhot.service.BetRequest.prototype.addBets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bhuhot.service.Game.Bet, opt_index);
};


proto.bhuhot.service.BetRequest.prototype.clearBetsList = function() {
  this.setBetsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bhuhot.service.BetReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bhuhot.service.BetReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bhuhot.service.BetReply.displayName = 'proto.bhuhot.service.BetReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bhuhot.service.BetReply.prototype.toObject = function(opt_includeInstance) {
  return proto.bhuhot.service.BetReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bhuhot.service.BetReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.BetReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    authErrorCode: jspb.Message.getField(msg, 1),
    betErrorCode: jspb.Message.getField(msg, 2),
    bets: (f = msg.getBets()) && proto.bhuhot.service.Game.Bet.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bhuhot.service.BetReply}
 */
proto.bhuhot.service.BetReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bhuhot.service.BetReply;
  return proto.bhuhot.service.BetReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bhuhot.service.BetReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bhuhot.service.BetReply}
 */
proto.bhuhot.service.BetReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (reader.readEnum());
      msg.setAuthErrorCode(value);
      break;
    case 2:
      var value = /** @type {!proto.bhuhot.service.BetReply.BetErrorCode} */ (reader.readEnum());
      msg.setBetErrorCode(value);
      break;
    case 3:
      var value = new proto.bhuhot.service.Game.Bet;
      reader.readMessage(value,proto.bhuhot.service.Game.Bet.deserializeBinaryFromReader);
      msg.setBets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bhuhot.service.BetReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bhuhot.service.BetReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bhuhot.service.BetReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bhuhot.service.BetReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.bhuhot.service.BetReply.BetErrorCode} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getBets();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bhuhot.service.Game.Bet.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bhuhot.service.BetReply.BetErrorCode = {
  NO_ERROR: 0,
  MONEY_TOO_LOW: 1,
  MONEY_TOO_HIGH: 2,
  OPTION_TOO_MANY: 3,
  NO_ENOUGH_MONEY: 4
};

/**
 * required AuthReply.AuthErrorCode auth_error_code = 1;
 * @return {!proto.bhuhot.service.AuthReply.AuthErrorCode}
 */
proto.bhuhot.service.BetReply.prototype.getAuthErrorCode = function() {
  return /** @type {!proto.bhuhot.service.AuthReply.AuthErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.bhuhot.service.AuthReply.AuthErrorCode} value */
proto.bhuhot.service.BetReply.prototype.setAuthErrorCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.bhuhot.service.BetReply.prototype.clearAuthErrorCode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.BetReply.prototype.hasAuthErrorCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BetErrorCode bet_error_code = 2;
 * @return {!proto.bhuhot.service.BetReply.BetErrorCode}
 */
proto.bhuhot.service.BetReply.prototype.getBetErrorCode = function() {
  return /** @type {!proto.bhuhot.service.BetReply.BetErrorCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.bhuhot.service.BetReply.BetErrorCode} value */
proto.bhuhot.service.BetReply.prototype.setBetErrorCode = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.bhuhot.service.BetReply.prototype.clearBetErrorCode = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.BetReply.prototype.hasBetErrorCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Game.Bet bets = 3;
 * @return {?proto.bhuhot.service.Game.Bet}
 */
proto.bhuhot.service.BetReply.prototype.getBets = function() {
  return /** @type{?proto.bhuhot.service.Game.Bet} */ (
    jspb.Message.getWrapperField(this, proto.bhuhot.service.Game.Bet, 3));
};


/** @param {?proto.bhuhot.service.Game.Bet|undefined} value */
proto.bhuhot.service.BetReply.prototype.setBets = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.bhuhot.service.BetReply.prototype.clearBets = function() {
  this.setBets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bhuhot.service.BetReply.prototype.hasBets = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.bhuhot.service);
